{"ast":null,"code":"// import React from 'react';\n// import {Route,Redirect} from 'react-router-dom';\n// import PropTypes from 'prop-types'\n// import {connect} from 'react-redux'\n// const PrivateRoute = ({component:Component,auth:{isAuthenticated,loading},...rest})=> (\n//     <Route {...rest} render=\n//     {props => !isAuthenticated && !loading ? \n//         (<Redirect to='/login' />):\n//         (<Component{...props}/>)}/>\n// );\n// PrivateRoute.propTypes = {\n//     auth:PropTypes.func.isRequired,\n// };\n// const mapStateToProps = state => ({\n//     auth:state.auth\n// });\n// export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/MernProject/client/src/components/routing/PrivateRoute.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\r\n// import {Route,Redirect} from 'react-router-dom';\r\n// import PropTypes from 'prop-types'\r\n// import {connect} from 'react-redux'\r\n// const PrivateRoute = ({component:Component,auth:{isAuthenticated,loading},...rest})=> (\r\n//     <Route {...rest} render=\r\n//     {props => !isAuthenticated && !loading ? \r\n//         (<Redirect to='/login' />):\r\n//         (<Component{...props}/>)}/>\r\n// );\r\n\r\n// PrivateRoute.propTypes = {\r\n//     auth:PropTypes.func.isRequired,\r\n// };\r\n// const mapStateToProps = state => ({\r\n//     auth:state.auth\r\n// });\r\n// export default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}